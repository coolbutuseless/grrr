% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sentinel.R
\name{set_sentinel_on_default_arg}
\alias{set_sentinel_on_default_arg}
\title{Set a sentinel to output a message when a default argument is used in a function}
\usage{
set_sentinel_on_default_arg(function_name, argument_name,
  package_name = NULL, envir = parent.frame())
}
\arguments{
\item{function_name}{character name of function}

\item{argument_name}{Name of default argument which should have sentinel}

\item{package_name}{character name of package. Set this if you want the function
to be updated within the package namespace.  If this is unset
then the changed function is placed in the specified environment}

\item{envir}{environment to place the function if package_name not set}
}
\description{
This is a concrete example of how \code{update_function_arguments()} can be
used to figure out where default arguments are being called from.
}
\examples{
\dontrun{
# Get a sentinel warning everytime data.frame() is called without the user
# explicitly setting a 'stringsAsFactors' argument
set_sentinel_on_default_arg('data.frame', 'stringsAsFactors', package_name = 'base')
}

}
